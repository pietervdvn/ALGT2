# Hello! Welcome in the ALGT template/tutorial.
# Reading these comments will guide you through your first language
#
# Note that this tool is meant for programmers which have some experience, especially in the field of language design


# First of all, we start with imports. An imports you'll need practically every time, are the builtin values
# These contain some often used syntactic forms and functions to work with numbers (such as `plus`)

import ALGT.Builtins


# The name of your language

 Template
**********

# Some comments here

# Commans in the repl:
# Type
# :h


 Syntax
========

a	::= "T" | "F" | "(" a ")"


builtins	::= identifier | identifierUpper | string | unicodeChar
		| upper | lower | digit | lineChar | wordChar
		| number | integer

whitespaceSensitiveLine		~~= a a

 Functions
===========


and		: a * a -> a
and("T", "T")	= "T"
and(_, _)	= "F"



 Relations
============

(→)	: a (in) * a (out); Pronounced as "some name"

 Rules
=======

 (→) x, y	y : a
---------------------- [Name of the Rule]
(→) x, and(y, "T")
